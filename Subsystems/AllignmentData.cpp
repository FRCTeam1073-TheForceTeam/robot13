#include "AllignmentData.h"
#include "../Robotmap.h"
#include "../Robot.h"
int AllignmentData::DEFAULT = -1;
AllignmentData::AllignmentData() : Subsystem("AllignmentData") {
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	calculatedDistance = DEFAULT;
	calculatedAngle = DEFAULT;
	trackingDataTable = NetworkTable::GetTable("tracking");

}
void AllignmentData::InitDefaultCommand(){}
double AllignmentData::GetCalculatedDistance() {return trackingDataTable->GetNumber("calculatedDistance", -1);}
double AllignmentData::GetCalculatedAngle() {return trackingDataTable->GetNumber("calculatedAngle", -1);}
bool AllignmentData::IsTarget(){return calculatedDistance != DEFAULT && calculatedAngle != DEFAULT;}
void AllignmentData::SendCurrentAngle(int angle)
{
	trackingDataTable->PutNumber("currentAngle", angle);
	printf("AllignmentData SendCurrentAngle angle: %d\n", angle);
	printf("Network Table is Connected %d", trackingDataTable->IsConnected());
}
void AllignmentData::SendCurrentSpeed(int speed) {
	trackingDataTable->PutNumber("currentSpeed", speed);
	printf("AllignmentData SendCurrentSpeed speed: %d\n", speed);
	printf("Network Table is Connected %d", trackingDataTable->IsConnected());
}
