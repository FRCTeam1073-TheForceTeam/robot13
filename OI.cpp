#include "OI.h"
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "SmartDashboard/SmartDashboard.h"
#include "Commands/AutonomousForward.h"
#include "Commands/AutonomousLeftBack.h"
#include "Commands/AutonomousMiddleBack.h"
#include "Commands/AutonomousRightBack.h"
#include "Commands/AutonomousTurnLeft.h"
#include "Commands/AutonomousTurnRight.h"
#include "Commands/CollectDiscs.h"
#include "Commands/DiscsReverse.h"
#include "Commands/JoystickDrive.h"
#include "Commands/LightOn.h"
#include "Commands/PullNewAllignmentData.h"
#include "Commands/SetShooterToCalculatedValues.h"
#include "Commands/Shoot.h"
#include "Commands/ShooterOff.h"
#include "Commands/ShooterOn.h"
#include "Commands/TestSmartDashboard.h"
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "Commands/KillCommandCommand.h"
OI::OI() {
	// Process operator interface input here.
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
	operatorStick = new Joystick(3);
	
	testSmartDashboard = new JoystickButton(operatorStick, 8);
	testSmartDashboard->WhenPressed(new TestSmartDashboard());
	shooterOffButton = new JoystickButton(operatorStick, 6);
	shooterOffButton->WhenPressed(new ShooterOff());
	shooterOnButton = new JoystickButton(operatorStick, 5);
	shooterOnButton->WhenPressed(new ShooterOn());
	shootButton = new JoystickButton(operatorStick, 1);
	shootButton->WhenPressed(new Shoot());
	rightStick = new Joystick(2);
	
	leftStick = new Joystick(1);
	
     
        // SmartDashboard Buttons
	SmartDashboard::PutData("AutonomousRightBack", new AutonomousRightBack());
	SmartDashboard::PutData("AutonomousLeftBack", new AutonomousLeftBack());
	SmartDashboard::PutData("AutonomousMiddleBack", new AutonomousMiddleBack());
	SmartDashboard::PutData("LightOn", new LightOn());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
	writeDriveDataButton = new JoystickButton(leftStick, 1);
	//WriteDriveData* command = new WriteDriveData();
	//writeDriveDataButton->WhenPressed(command);
    //writeDriveDataButton->WhenReleased(new KillCommandCommand(command));
}
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
Joystick* OI::getOperatorStick() {
	return operatorStick;
}
Joystick* OI::getRightStick() {
	return rightStick;
}
Joystick* OI::getLeftStick() {
	return leftStick;
}
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
