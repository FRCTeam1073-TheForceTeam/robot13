#include "RobotMap.h"
#include "LiveWindow/LiveWindow.h"
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION
AnalogChannel* RobotMap::lightLightRing = NULL;
Ultrasonic* RobotMap::navigationRangeFinder = NULL;
AnalogChannel* RobotMap::navigationAltimiter = NULL;
Servo* RobotMap::climberRightServo = NULL;
Servo* RobotMap::climberLeftServo = NULL;
CANJaguar* RobotMap::driveTrainLeftDriveMotor = NULL;
CANJaguar* RobotMap::driveTrainRightDriveMotor = NULL;
Encoder* RobotMap::driveTrainLeftEncoder = NULL;
Encoder* RobotMap::driveTrainRightEncoder = NULL;
CANJaguar* RobotMap::shooterElevationJag = NULL;
Encoder* RobotMap::shooterElevationEncoder = NULL;
CANJaguar* RobotMap::shooterShooterJag = NULL;
Encoder* RobotMap::shooterShooterEncoder = NULL;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION
void RobotMap::init() {
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
	LiveWindow* lw = LiveWindow::GetInstance();
	lightLightRing = new AnalogChannel(1, 2);
	lw->AddSensor("Light", "LightRing", lightLightRing);
	
	navigationRangeFinder = new Ultrasonic(1, 9, 1, 10);
	lw->AddSensor("Navigation", "RangeFinder", navigationRangeFinder);
	
	navigationAltimiter = new AnalogChannel(1, 1);
	lw->AddSensor("Navigation", "Altimiter", navigationAltimiter);
	
	climberRightServo = new Servo(1, 1);
	lw->AddActuator("Climber", "RightServo", climberRightServo);
	
	climberLeftServo = new Servo(1, 2);
	lw->AddActuator("Climber", "LeftServo", climberLeftServo);
	
	driveTrainLeftDriveMotor = new CANJaguar(2);
	
	
	driveTrainRightDriveMotor = new CANJaguar(3);
	
	
	driveTrainLeftEncoder = new Encoder(1, 3, 1, 4, false, Encoder::k4X);
	lw->AddSensor("DriveTrain", "LeftEncoder", driveTrainLeftEncoder);
	driveTrainLeftEncoder->SetDistancePerPulse(1.0);
        driveTrainLeftEncoder->SetPIDSourceParameter(Encoder::kRate);
        driveTrainLeftEncoder->Start();
	driveTrainRightEncoder = new Encoder(1, 5, 1, 6, false, Encoder::k4X);
	lw->AddSensor("DriveTrain", "RightEncoder", driveTrainRightEncoder);
	driveTrainRightEncoder->SetDistancePerPulse(1.0);
        driveTrainRightEncoder->SetPIDSourceParameter(Encoder::kRate);
        driveTrainRightEncoder->Start();
	shooterElevationJag = new CANJaguar(4);
	
	
	shooterElevationEncoder = new Encoder(1, 7, 1, 8, false, Encoder::k4X);
	lw->AddSensor("Shooter", "ElevationEncoder", shooterElevationEncoder);
	shooterElevationEncoder->SetDistancePerPulse(1.0);
        shooterElevationEncoder->SetPIDSourceParameter(Encoder::kRate);
        shooterElevationEncoder->Start();
	shooterShooterJag = new CANJaguar(5);
	
	
	shooterShooterEncoder = new Encoder(1, 1, 1, 2, false, Encoder::k4X);
	lw->AddSensor("Shooter", "ShooterEncoder", shooterShooterEncoder);
	shooterShooterEncoder->SetDistancePerPulse(1.0);
        shooterShooterEncoder->SetPIDSourceParameter(Encoder::kRate);
        shooterShooterEncoder->Start();
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        
}
