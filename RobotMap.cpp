#include "RobotMap.h"
#include "LiveWindow/LiveWindow.h"
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION
SpeedController* RobotMap::climberRightClimbWindowTalon = NULL;
CANJaguar* RobotMap::climberLeftCIM = NULL;
CANJaguar* RobotMap::climberRightCIM = NULL;
SpeedController* RobotMap::climberLeftClimbWindowTalon = NULL;
CANJaguar* RobotMap::driveTrainLeftMotor = NULL;
CANJaguar* RobotMap::driveTrainRightMotor = NULL;
Gyro* RobotMap::driveTrainGyro = NULL;
SpeedController* RobotMap::collectorMotor = NULL;
DigitalInput* RobotMap::collectorDiscOnShooterBed = NULL;
AnalogChannel* RobotMap::collectorDiscCountSensor = NULL;
AnalogChannel* RobotMap::collectorDiscUpsideDownSensor = NULL;
CANJaguar* RobotMap::shooterElevationJag = NULL;
CANJaguar* RobotMap::shooterFrontJag = NULL;
CANJaguar* RobotMap::shooterBackJag = NULL;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION
LimitSwitch* RobotMap::shooterElevationTopSwitch = NULL;
LimitSwitch* RobotMap::shooterElevationBottomSwitch = NULL;
LimitSwitch* RobotMap::climberChainsawBottomSwitch = NULL;
LimitSwitch* RobotMap::climberChainsawTopSwitch = NULL;
Encoder* RobotMap::climberChainsawElevationMEncoder = NULL;
DigitalInput* RobotMap::velocity1 = NULL;
DigitalInput* RobotMap::velocity2 = NULL;
StallableAnalogEncoder* RobotMap::shooterElevationEncoder = NULL;
StallableAnalogEncoder* RobotMap::climberLeftWindowEncoder = NULL;
StallableAnalogEncoder* RobotMap::climberRightWindowEncoder = NULL;
void RobotMap::init() {
#warning "Magic Numbers Practicing Dark Magic"
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
	LiveWindow* lw = LiveWindow::GetInstance();
	climberRightClimbWindowTalon = new Talon(1, 2);
	lw->AddActuator("Climber", "RightClimbWindowTalon", (Talon*) climberRightClimbWindowTalon);
	
	climberLeftCIM = new CANJaguar(2);
	
	
	climberRightCIM = new CANJaguar(3);
	
	
	climberLeftClimbWindowTalon = new Talon(1, 1);
	lw->AddActuator("Climber", "LeftClimbWindowTalon", (Talon*) climberLeftClimbWindowTalon);
	
	driveTrainLeftMotor = new CANJaguar(6);
	
	
	driveTrainRightMotor = new CANJaguar(9);
	
	
	driveTrainGyro = new Gyro(1, 1);
	lw->AddSensor("DriveTrain", "Gyro", driveTrainGyro);
	driveTrainGyro->SetSensitivity(1.25);
	collectorMotor = new Victor(1, 3);
	lw->AddActuator("Collector", "Motor", (Victor*) collectorMotor);
	
	collectorDiscOnShooterBed = new DigitalInput(1, 4);
	lw->AddSensor("Collector", "DiscOnShooterBed", collectorDiscOnShooterBed);
	
	collectorDiscCountSensor = new AnalogChannel(1, 3);
	lw->AddSensor("Collector", "DiscCountSensor", collectorDiscCountSensor);
	
	collectorDiscUpsideDownSensor = new AnalogChannel(1, 4);
	lw->AddSensor("Collector", "DiscUpsideDownSensor", collectorDiscUpsideDownSensor);
	
	shooterElevationJag = new CANJaguar(4);
	
	
	shooterFrontJag = new CANJaguar(5);
	
	
	shooterBackJag = new CANJaguar(7);
	
	
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
	shooterElevationEncoder = new StallableAnalogEncoder(1, 1);
	climberLeftWindowEncoder = new StallableAnalogEncoder(1, 5);
	climberRightWindowEncoder = new StallableAnalogEncoder(1, 6);
    velocity1 = new DigitalInput(1,4);
    velocity2 = new DigitalInput(1, 5);
	shooterElevationTopSwitch = new LimitSwitch(1, 7);
	shooterElevationBottomSwitch = new LimitSwitch(1, 6);
	lw->AddSensor("Shooter", "ElevationTopSwitch", shooterElevationTopSwitch);
	lw->AddSensor("Shooter", "ElevationBottomSwitch", shooterElevationBottomSwitch);
}
