#include "AutonomousTurns.h"
#include "cmath"
#define FORWARD_SPEED 100
#define TURNING_ANGLE 90
AutonomousTurns::AutonomousTurns(bool isRight) {
	// Use requires() here to declare subsystem dependencies
	// eg. requires(chassis);
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::driveTrain);
	turnRight = isRight;
}
// Called just before this Command runs the first time
void AutonomousTurns::Initialize() {
	startingAngle = Robot::driveTrain->GetGyroAngle();
	if(turnRight) Robot::driveTrain->Move(0, FORWARD_SPEED);
	else Robot::driveTrain->Move(FORWARD_SPEED, 0);
}
// Called repeatedly when this Command is scheduled to run
void AutonomousTurns::Execute() {
	
}
// Make this return true when this Command no longer needs to run execute()
bool AutonomousTurns::IsFinished() {
	float value = startingAngle - Robot::driveTrain->GetGyroAngle();
	if(!turnRight) value = abs(value); 
	return value > TURNING_ANGLE;
}
// Called once after isFinished returns true
void AutonomousTurns::End() {
	Robot::driveTrain->Move(0, 0);
}
// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void AutonomousTurns::Interrupted() {
	End();
}
